---
import { getListings } from "../../lib/getListings";
import PureGrid from "./PureGrid.astro";

const allListings = (await getListings()).sort(
  (a, b) => Number(b.data.featured) - Number(a.data.featured),
);
---

<PureGrid id="directory-grid" listings={allListings} />

<script>
  import { search, tags } from "../../store.js";

function filterListings() {
  const listingsArray = document.querySelectorAll(".listing");
  const currentSearch = search.get().trim().toLowerCase();
  const selectedTags = tags.get();
  const selectedTagsSet = new Set(selectedTags); // For efficient lookup

  for (const element of listingsArray) {
    // Get content for search filtering
    const title = (element.querySelector(".card-title")?.textContent || "").toLowerCase();
    const description = (element.querySelector(".card-description")?.textContent || "").toLowerCase();
    const content = title + description;

    // Get tags from data attribute
    if (element instanceof HTMLElement) {
      const elementTags = element.dataset.tags?.split(",") || [];
      const elementTagsLower = elementTags.map(tag => tag.trim().toLowerCase());

      // Determine if the listing matches
      const matchesSearch = currentSearch === "" || 
                            content.includes(currentSearch) || 
                            elementTagsLower.some(tag => tag.includes(currentSearch));
      const matchesTags = selectedTags.length === 0 ||
                          elementTags.some(tag => selectedTagsSet.has(tag.trim()));

      // Show or hide the listing
      if (matchesSearch && matchesTags) {
        element.classList.remove("hidden");
      } else {
        element.classList.add("hidden");
      }
    }
  }
}

  // Subscribe to both stores, triggering filtering on any change
  search.subscribe(() => filterListings());
  tags.subscribe(() => filterListings());
</script>
